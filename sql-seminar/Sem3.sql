/*
Приджойним к данным о заказах данные о покупателях. 
Данные, которые нас интересуют — имя заказчика и страна, из которой совершается покупка.
*/

SELECT o.*, CustomerName , Country 
FROM Customers c 
JOIN Orders o ON c.CustomerID = o.CustomerID;

/*
Давайте проверим, Customer пришедшие из какой страны совершили наибольшее число Orders.
Используем сортировку по убыванию по полю числа заказов u выведем сверху в результирующей таблице название лидирующей страны.
*/

SELECT Country, COUNT(*) AS cnt 
FROM Customers c 
JOIN Orders o  ON c.CustomerID = o.CustomerID 
GROUP BY Country 
ORDER BY cnt DESC
LIMIT 1;

/*
А теперь напишем запрос, который обеспечит целостное представление деталей заказа, включая информацию как о клиентах, так и о сотрудниках.
Будем использовать JOIN для соединения информации из таблиц Orders, Customers и Employees.
*/

SELECT * 
FROM Customers c 
JOIN Orders o ON o.CustomerID = c.CustomerID 
JOIN Employees e ON o.EmployeeID = e.EmployeeID;

/*
Проанализировать данные заказа, рассчитать ключевые показатели, связанные с выручкой, и соотнести результаты с ценовой информацией из таблицы Products.
Давайте посмотрим на общую выручку, а также минимальный, максимальный чек в разбивке по странам.
*/

SELECT 
	c.Country ,
	SUM(p.Price * od.Quantity),
	MAX(p.Price * od.Quantity),
	MIN(p.Price * od.Quantity)
FROM Customers c 
JOIN Orders o ON o.CustomerID = c.CustomerID 
JOIN OrderDetails od ON od.OrderID = o.OrderID 
JOIN Products p ON p.ProductID = od.ProductID
GROUP BY c.Country ;  

/*
Выведем имена покупателей, которые совершили как минимум одну покупку 12 декабря
*/

SELECT DISTINCT CustomerName 
FROM Customers c 
JOIN Orders o ON o.CustomerID = c.CustomerID
WHERE o.OrderDate = '2023-12-12';

/*
Напишем SQL-запрос для создания отчета об исследовании продукта, показывающего потенциальный интерес к каждому продукту в разных странах. 
Используем CROSS JOIN операцию для создания комбинаций стран и продуктов.
Это PotentialInterest должно представлять собой гипотетическую оценку, основанную на общем количестве клиентов из этой страны, 
которые могут быть заинтересованы в конкретном продукте.
CROSS JOIN создаёт все возможные комбинации стран и названий продуктов.
*/






/*
Давайте проанализируем разнообразие поставщиков в категориях продуктов.
Напишем SQL-запрос для определения поставщиков, предлагающих широкий ассортимент продукции в разных категориях.
*/





/*
Ваша компания заинтересована в том, чтобы понять, в каких странах появились новые клиенты, которые еще не разместили заказы.
Напишем SQL-запрос, позволяющий идентифицировать страны, в которых клиенты зарегистрировались, но не сделали заказов.
*/




/*
Представим, что Ваша компания хочет выявить клиентов, которые приобрели товары как стоимостью менее 30, так и стоимостью более 150 долларов США.
Напишите запрос SQL, INTERSECT чтобы найти клиентов, которые делали покупки в обоих этих ценовых диапазонах.
*/






/*
Следующим запросом давайте создадим набор результатов, который включает уникальные записи о клиентах как для США, так и для Канады.
В данном случае оператор UNION объединяет результаты двух отдельных запросов, представляя единый список клиентов из обеих стран, удаляя при этом любые дубликаты.
*/

SELECT *
FROM Customers c 
WHERE Country = 'USA'
UNION 
SELECT *
FROM Customers c 
WHERE Country = 'Canada';


